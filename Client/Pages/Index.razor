@page "/"
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime
@using Common.Utilities;

<BlazoredTypeahead SearchMethod="AutoSearch" @bind-Value="selectedItem" Debounce="100">
    <SelectedTemplate>
        @context
    </SelectedTemplate>
    <ResultTemplate>
        <b>@context</b>
    </ResultTemplate>
    <NotFoundTemplate>
        Sorry, there weren't any search results.
    </NotFoundTemplate>
</BlazoredTypeahead>


<label style="margin-top: 5px; margin-bottom: 5px">Which section do you want to see?</label>

@foreach (var item in new string[] { "Selling", "Buying" })
{
    <div style="margin-top: 5px; margin-bottom: 5px">
        <input type="radio" name="technology" id="@item" value="@item" @onchange="RadioSelection" checked=@(radioButtonValue.Equals(item,StringComparison.OrdinalIgnoreCase)) />
        <label for="@item">@item</label>
    </div>
}

<button class="btn btn-primary" type="submit" style="margin-top: 20px;" @onclick="@(_ => Submit())">Submit</button>

@code {
    private List<string> items;
    private string selectedItem;
    private string radioButtonValue = "Selling";

    protected override async Task OnInitializedAsync()
    {
        items = LoadItems();
    }

    public List<string> LoadItems()
    {
        return Definitions.GetAllItemNames();
    }

    private async Task<IEnumerable<string>> AutoSearch(string searchItem)
    {
        return await Task.FromResult(items.Where(item => item.ToLower().Contains(searchItem.ToLower())).ToList());
    }

    void RadioSelection(ChangeEventArgs args)
    {
        if (!args.Value.ToString().Equals("Selling"))
            radioButtonValue = "Buying";
        else
        {
            radioButtonValue = "Selling";
        }
    }

    public async Task Submit()
    {
        if (string.IsNullOrEmpty(selectedItem))
        {
            await jsRuntime.InvokeVoidAsync("alert", "Please input an item name");
            return;
        }
        if (radioButtonValue.Equals("Selling"))
            NavManager.NavigateTo($"/offers/{selectedItem.ToLower().Replace(" ", "")}/true");
        else
            NavManager.NavigateTo($"/offers/{selectedItem.ToLower().Replace(" ", "")}/false");
    }
}